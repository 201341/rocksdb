sudo: required
dist: trusty
language: cpp
os:
- linux
compiler:
  - gcc
cache:
  directories:
  - "$BUILD_DIR/aws"
addons:
   apt:
      packages:
      - zlib1g-dev
      - libbz2-dev
      - libsnappy-dev
      - curl
      - libgflags-dev
      - mingw-w64
      - libcurl4-openssl-dev
      - libssl-dev
      - uuid-dev
      - libpulse-dev
env:
  - TEST_GROUP=db_test
  - TEST_GROUP=db_test2
  - TEST_GROUP=cloud_tests

before_script:
  # Increase the maximum number of open file descriptors, since some tests use
  # more FDs than the default limit.
  - ulimit -n 8192
  - pushd /tmp && wget https://github.com/aws/aws-sdk-cpp/archive/1.3.50.tar.gz -O /tmp/aws-sdk.tar.gz && tar -xvf /tmp/aws-sdk.tar.gz > /dev/null && popd
  - pushd /tmp/aws-sdk-cpp-1.3.50 && cmake -DBUILD_ONLY="s3;kinesis" . && make -j4 all && sudo make install && popd
  # Install librdkafka
  - LIBRDKAFKA_VERSION=0.11.3
  - wget https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz
  - tar -zxvf v${LIBRDKAFKA_VERSION}.tar.gz
  - sudo bash -c "cd librdkafka-${LIBRDKAFKA_VERSION} && ./configure && make && make install"

script:
  # Note: We remove flaky tests that don't have much to do with our cloud code (like MergeTestTime and UnsupportedManualSync)
  - >
      if [ "${TEST_GROUP}" == 'db_test' ]; then
        OPT=-DTRAVIS V=1 USE_AWS=1 USE_KAFKA=1 make -j4 db_test &&
        LD_LIBRARY_PATH=/usr/local/lib ./db_test --gtest_filter=-DBTest.MergeTestTime:DBTest.UnsupportedManualSync;
      fi
  - >
      if [ "${TEST_GROUP}" == 'db_test2' ]; then
        OPT=-DTRAVIS V=1 USE_AWS=1 USE_KAFKA=1 make -j4 db_test2 &&
        LD_LIBRARY_PATH=/usr/local/lib ./db_test2;
      fi
  - >
      if [ "${TEST_GROUP}" == 'cloud_tests' ]; then
        build_tools/spinup_kafka.sh &&
        sleep 10 && OPT=-DTRAVIS V=1 USE_AWS=1 USE_KAFKA=1 make -j4 db_cloud_test cloud_manifest_test &&
        LD_LIBRARY_PATH=/usr/local/lib ./db_cloud_test && LD_LIBRARY_PATH=/usr/local/lib ./cloud_manifest_test;
      fi

notifications:
  slack:
    rooms:
      - rockset-io:4q1pfQSzMd3UgSR18Yu23quQ#rocksdb-cloud-ci
    on_success: always
    on_failure: always
