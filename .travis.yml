sudo: false
dist: trusty
language: cpp
os:
  - linux
compiler:
  - gcc
cache:
  - ccache
  - apt

addons:
  apt:
    sources:
    - llvm-toolchain-precise-3.6
    - ubuntu-toolchain-r-test
    packages:
    - clang-3.6
    - cmake
    - curl
    - g++-6
    - libbz2-dev
    - libcurl4-openssl-dev
    - libgflags-dev
    - libsnappy-dev
    - zlib1g-dev
env:
  # Run all tests before db_block_cache_test (db_test, db_test2)
  - JOB_NAME=unittests ROCKSDBTESTS_END=db_block_cache_test USE_AWS=1 TRAVIS_BUILD_DIR=travis-build
  # Run all tests starting from db_block_cache_test (db_block_cache_test, ..., plain_table_db_test)
  - JOB_NAME=unittests ROCKSDBTESTS_START=db_block_cache_test ROCKSDBTESTS_END=comparator_db_test USE_AWS=1 TRAVIS_BUILD_DIR=travis-build
  # Run all tests starting from db_block_cache_test (comparator_db_test, ...)
  - JOB_NAME=unittests ROCKSDBTESTS_START=comparator_db_test USE_AWS=1 TRAVIS_BUILD_DIR=travis-build

branches:
  only:
  - master
  - staging

before_install:
  - mkdir $TRAVIS_BUILD_DIR

before_script:
  # Limit the maximum number of open file descriptors to 8192
  - ulimit -n 8192 || true

  # install AWWS CPP SDK
  - mkdir $TRAVIS_BUILD_DIR/aws
  - pushd .
  - cd $TRAVIS_BUILD_DIR/aws
  - git clone https://github.com/aws/aws-sdk-cpp.git
  - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="s3;kinesis" aws-sdk-cpp/
  - make
  - sudo make install
  - sudo ldconfig
  - popd

script:
  - ${CXX} --version
  - if [[ "${JOB_NAME}" == 'unittests' ]]; then OPT=-DTRAVIS V=1 make -j4 check_some; fi
  - if [[ "${JOB_NAME}" == 'java_test' ]]; then OPT=-DTRAVIS V=1 make clean jclean rocksdbjava jtest; fi
  - if [[ "${JOB_NAME}" == 'lite_build' ]]; then OPT="-DTRAVIS -DROCKSDB_LITE" V=1 make -j4 static_lib; fi
notifications:
  slack:
    rooms:
      secure: p6EX9WiIlPAdfdjJdluiOr41rXE2egjaRQQKPrBIMKUmwLs8iPWl0bkUJrlozvcuF5k2ed4pJ8vyAFpYwezMp+g691tZdHirrlzR/6HY4ZpsLKBlDbV6alREgFVr7ptA2+C9KnILIDaqJyiCxhPrnzKbXjuf78m95VNZnH5o7XlY/yfphHFBlsRltu9iFWRixCI1kx5Ch8eIIhYs7n22S1mJlcBrjsaCIVugnXiztaUlgdmwDBiT1LWfWbHwfUegaZWkygoPRiVmz3Xd61oJlssyKoEic74MPUXysLm4dovj+yg+YHEZr4JVlATUs1/FlJIhKDL53WnefXvYlA7hiPnUxzaJKbqSopqKMGY9c4YgyHaOzMb7EkzD8t8F2LidUC/I0dXah02wS+UDe/NSAOJ5ExPfEILsneMeZAWEHi6z4rXK0GNEZntUZrhmFLYVIB+eK98DGNOQDnVRZX7dI+70D+P4EAGbzDfy2/VIKrwgn7Ui2m0fofmpgp23KTATAdG8zKT8rvl487QNBIzxaIUAcVXGRSeNMrF3d2BynsNEGsHzxoWRcm5UDWwvPr/nu/KAAGur3r61Zc45OcsP+pGndDmEva41sg+Xg39dwWwl5PVAfRXp5ZsPlFNCtP6VWjb+wVKQa+aZAadl/n4BDN4+PonBqgd3zRZcgcs6kXw=
    on_success: always
    on_failure: always
